name: Deploy_to_git

on: push
  # pull_request:
  #   types:
  #     - closed

jobs:
  build_shared_library:
    strategy:
      fail-fast: false
      matrix:
      # Shared libraries for Windows (.dll) currently do not work (https://github.com/CosmWasm/wasmvm/issues/389)
      # and .dll builds are not deterministic.
      # Deactivating this step to avoid polluting the git hostory.
        os: [linux, macos]
        include: 
          - os: linux
            dockerfile_name: centos7
            shared_library_extension: so
          - os: macos
            dockerfile_name: cross
            shared_library_extension: dylib
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Prepare
        id: prep
        run: |
          HASH_GHE=${{ github.sha }}
          TAG=$(TZ=UTC-9 date '+%Y%m')${HASH_GHE:0:7}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache/${{ matrix.os }}
          key: ${{ matrix.os }}-buildx-${{ steps.prep.outputs.tag }}
          restore-keys: |
            ${{ matrix.os }}-buildx-
      # delete late
      - name: Debug build results
        run: ls -al /tmp/.buildx-cache/${{ matrix.os }}-new
      - name: Build docker
        uses: docker/build-push-action@v4
        with:
          context: ./builders
          file: ./builders/Dockerfile.${{ matrix.dockerfile_name }}
          tags: finschia/wasmvm-builder-${{ matrix.dockerfile_name }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.os }}
          cache-to: type=local,dest=/tmp/.buildx-cache/${{ matrix.os }}-new,mode=max
          load: true
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache/${{ matrix.os }}
          mv /tmp/.buildx-cache/${{ matrix.os }}-new /tmp/.buildx-cache/${{ matrix.os }}
      # delete later
      - name: debug
        run: |
          ls -al /tmp/.buildx-cache/${{ matrix.os }}-new
      - name: Build shared library for Linux
        run: make release-build-${{ matrix.os }}
      # delete later
      - name: debug
        run: |
          ls -al
          ls -al /tmp
          ls -al ./internal/api
      - name: Upload shared library
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-shared-library
          path: ./internal/api/*.${{ matrix.shared_library_extension }}

  deploy_to_git:
    runs-on: ubuntu-latest
    needs: build_shared_library
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download shared library
        uses: actions/download-artifact@v3
        with:
          path: ./internal/api
      # delete later
      - name: debug
        run: |
          ls -al
          ls -al ./internal/api
      - name: Check diff
        id: cd
        run: |
          if ! git diff --stat --exit-code ; then
            echo "need_update=true" >> "$GITHUB_OUTPUT"
          else
            echo "need_update=false" >> "$GITHUB_OUTPUT"
          fi
      # - name: Calculate the checksum
      #   run: |
      #     cd ./internal/api/
      #     new_checksums=$(shasum -a 256 *.so *.dylib)
      #     old_checksums=$(cat checksums.txt)
      #     echo $new_checksums
      #     echo $old_checksums

      - name: debug
        run: echo ${{ steps.cd.outputs.need_update }}
      - name: test
        if: steps.cd.outputs.need_update=='true'
        run: echo "hello"
      # - name: Render template
      #   id: template
      #   uses: chuhlomin/render-template@v1.7
      #   with:
      #     template: .github/PULL_REQUEST_TEMPLATE.md
      #     vars: |
      #       foo: this
      #       bar: that
      # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs 
      # - name: Create pull request
      #   id: cpr 
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     # token: ${{ secrets.MACHINE_USER_PAT }}
      #     # push-to-fork: 170210/wasmvm
      #     commit-message: "chore: update shared library"
      #     committer: GitHub <noreply@github.com>
      #     author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
      #     signoff: true
      #     branch: update_shared_library_test
      #     #_${{ github.sha }}
      #     delete-branch: true
      #     title: 'chore: update shared library'
      #     body: |
      #       # Description
      #       Update shared library
      #       - Updated shared library
      #       - Auto-generated by [create-pull-request][1]

      #       ## Types of changes
      #       - [ ] Bug fix (changes which fixes an issue)
      #       - [ ] New feature (changes which adds functionality)
      #       - [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
      #       - [x] ETC (build, ci, docs, perf, refactor, style, test)

      #       ## Checklist
      #       - [x] I followed the [contributing guidelines](https://github.com/Finschia/wasmvm/blob/main/CONTRIBUTING.md).
      #       - [ ] I have updated the documentation accordingly.
      #       - [ ] I have added tests to cover my changes.
      #       - [x] The PR title and commits are followed [conventional commit form](https://www.conventionalcommits.org/en/v1.0.0).

      #       [1]: https://github.com/peter-evans/create-pull-request
      #     labels: automerge
      #     # assignees: 170210
      #     # reviewers: 170210
      #     # team-reviewers: |
      #     #   developers
      #     #   qa-team
      #     # milestone: 1
      #     draft: false